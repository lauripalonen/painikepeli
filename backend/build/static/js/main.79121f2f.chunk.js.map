{"version":3,"sources":["services/login.js","services/user.js","services/button.js","components/UserForm.js","components/GameButton.js","App.js","index.js"],"names":["login","credentials","a","axios","post","response","data","signup","getPlayer","id","get","updatePlayerPoints","player","put","increment","newButton","getButton","getButtonPresses","presses","UserForm","handleUsernameChange","handlePasswordChange","username","password","className","htmlFor","type","value","name","onChange","GameButton","handleButtonPress","onClick","App","useState","user","setUser","setUsername","setPassword","userPoints","setUserPoints","rewardCounter","setRewardCounter","notification","setNotification","useEffect","loggedUserJSON","window","localStorage","getItem","JSON","parse","points","updateRewardCounter","handleLogin","event","preventDefault","loginService","setItem","stringify","errorMessage","error","setTimedNotification","handleSignUp","userService","handleLogout","clear","buttonService","button","handlePlayerPoints","storedPlayer","updatedPlayer","updatedPoints","buttonPresses","confirm","message","setTimeout","handleSubmit","target","style","textAlign","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.79121f2f.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async credentials => {\n  const response = await axios.post(baseUrl, credentials)\n  return response.data\n}\n\nexport default { login }","import axios from 'axios'\nconst baseUrl = '/api/users'\n\nconst signup = async credentials => {\n  const response = await axios.post(baseUrl, credentials)\n  return response.data\n}\n\nconst getPlayer = async (id) => {\n  const response = await axios.get(`${baseUrl}/${id}`)\n  return response.data\n}\n\nconst updatePlayerPoints = async (id, player) => {\n  const response = await axios.put(`${baseUrl}/${id}`, player)\n  return response.data\n}\n\nexport default { signup, updatePlayerPoints, getPlayer }","import axios from 'axios'\nconst baseUrl = '/api/button'\n\nconst increment = async (id, newButton) => {\n  const response = await axios.put(`${baseUrl}/${id}`, newButton)\n  return response.data\n}\n\nconst getButton = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\n\nconst getButtonPresses = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data.presses\n}\n\nexport default { increment, getButton, getButtonPresses }","import React from 'react'\n\nconst UserForm = ({\n  handleUsernameChange,\n  handlePasswordChange,\n  username,\n  password,\n}) => {\n  return (\n    <div>\n      <h2>Player account</h2>\n      <form className=\"inner-form\">\n        <label htmlFor=\"username\">Username </label>\n        <br/>\n        <input\n          type=\"text\"\n          value={username}\n          name=\"Username\"\n          onChange={handleUsernameChange}\n          className=\"input-field\"\n        />\n        <br/>\n        <br />\n        <label htmlFor=\"password\">Password </label>\n        <br/>\n        <input\n          type=\"password\"\n          value={password}\n          name=\"Password\"\n          onChange={handlePasswordChange}\n          className=\"input-field\"\n        />\n      </form>\n    </div>\n  )\n}\n\nexport default UserForm","import React from 'react'\n\nconst GameButton = ({ handleButtonPress}) => {\n  return (\n  <div>\n    <button onClick={handleButtonPress} id=\"thebutton\">PUSH</button>\n  </div>\n  )\n}\n\nexport default GameButton","import React, { useState, useEffect } from 'react'\nimport loginService from './services/login'\nimport userService from './services/user'\nimport buttonService from './services/button'\nimport UserForm from './components/UserForm'\nimport GameButton from './components/GameButton'\n\nconst App = () => {\n  const [user, setUser] = useState(null)\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [userPoints, setUserPoints] = useState(null)\n  const [rewardCounter, setRewardCounter] = useState('')\n  const [notification, setNotification] = useState('')\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedPainikepeliUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n\n      setUser(user)\n      setUserPoints(user.points)\n      updateRewardCounter()\n    }\n  }, [])\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    try {\n      const user = await loginService.login({\n        username, password,\n      })\n\n      window.localStorage.setItem(\n        'loggedPainikepeliUser', JSON.stringify(user)\n      )\n\n      setUser(user)\n      setUserPoints(user.points)\n\n      updateRewardCounter()\n\n      setUsername('')\n      setPassword('')\n\n    } catch (exception) {\n      const errorMessage = exception.response.data.error\n      setTimedNotification(errorMessage)\n    }\n  }\n\n  const handleSignUp = async (event) => {\n    event.preventDefault()\n    try {\n      const user = await userService.signup({\n        username, password,\n      })\n\n      window.localStorage.setItem(\n        'loggedPainikepeliUser', JSON.stringify(user)\n      )\n\n      setUser(user)\n      setUserPoints(user.points)\n\n      updateRewardCounter()\n\n      setUsername('')\n      setPassword('')\n\n    } catch (exception) {\n      const errorMessage = exception.response.data.error\n      setTimedNotification(errorMessage)\n    }\n  }\n\n  const handleLogout = async (event) => {\n    event.preventDefault()\n    localStorage.clear()\n    setUser(null)\n  }\n\n  const handleButtonPress = async (event) => {\n    event.preventDefault()\n\n    const button = await buttonService.getButton()\n\n    const newButton = {\n      presses: button.presses + 1\n    }\n\n    await buttonService.increment(button.id, newButton)\n\n    await handlePlayerPoints()\n\n    updateRewardCounter()\n\n  }\n\n  const handlePlayerPoints = async () => {\n\n    const storedPlayer = JSON.parse(window.localStorage.getItem('loggedPainikepeliUser'))\n    const updatedPlayer = {\n      ...storedPlayer,\n      points: storedPlayer.points < 1 ? 0 : storedPlayer.points - 1\n    }\n    let updatedPoints = updatedPlayer.points\n    setUserPoints(updatedPoints)\n\n    const buttonPresses = await buttonService.getButtonPresses()\n\n    if (updatedPlayer.points < 1) {\n      if (window.confirm(\"No more points. Start again with 20 points?\")) {\n        updatedPoints = 20\n        setUserPoints(20)\n      } else {\n        localStorage.clear()\n        setUser(null)\n      }\n    }\n\n    else if (buttonPresses % 500 === 0) {\n      updatedPoints += 250\n      setUserPoints(updatedPlayer.points)\n      setTimedNotification('250 points rewarded!')\n    }\n\n    else if (buttonPresses % 100 === 0) {\n      updatedPoints += 40\n      setUserPoints(updatedPlayer.points)\n      setTimedNotification('40 points rewarded!')\n    }\n\n    else if (buttonPresses % 10 === 0) {\n      updatedPoints += 5\n      setUserPoints(updatedPlayer.points)\n      setTimedNotification('5 points rewarded!')\n    }\n\n    updatedPlayer.points = updatedPoints\n    setUserPoints(updatedPlayer.points)\n\n    await userService.updatePlayerPoints(user.id, updatedPlayer)\n    window.localStorage.setItem('loggedPainikepeliUser', JSON.stringify(updatedPlayer))\n\n  }\n\n  const updateRewardCounter = async () => {\n    const buttonPresses = await buttonService.getButtonPresses()\n    setRewardCounter(10 - (buttonPresses % 10))\n  }\n\n  const userForm = () => {\n    return (\n      <div className=\"account-form\">\n        <div>\n          <UserForm\n            handleSubmit={handleLogin}\n            handleUsernameChange={({ target }) => setUsername(target.value)}\n            handlePasswordChange={({ target }) => setPassword(target.value)}\n            username={username}\n            password={password}\n            className=\"user-form\"\n          />\n        </div>\n        <div className=\"button-block\">\n          <button onClick={handleLogin} className=\"normal-button\">LOG IN</button> or <button onClick={handleSignUp} className=\"normal-button\">SIGN UP</button>\n        </div>\n        <p style={{ textAlign: 'center' }}>{notification}</p>\n      </div>\n    )\n  }\n\n  const gameDisplay = () => {\n    return (\n      <div>\n        <div className=\"game-content\">\n          <GameButton handleButtonPress={handleButtonPress} />\n        </div>\n        <div className=\"game-data\">\n          Your points: {userPoints} < br />\n          Pushes until next reward: {rewardCounter}\n        </div>\n        <div className=\"notification-bar\">\n          {notification}\n        </div>\n        <div className=\"instruction-block\">\n          <h4>Instructions: </h4>\n          <p className=\"instructions\">\n            * Push the button to gain rewards <br />\n            * Push cost: 1 point <br />\n            * Lose all points: Game over!<br /><br />\n            You can start again with 20 points <br />\n          </p>\n          <h4>Rewards: </h4>\n          <p className=\"instructions\">\n            * every 10th click: +5 points <br />\n            * every 100th click: +40 points <br />\n            * every 500th click: +250 points <br />\n          </p>\n          <p className=\"quote\">\"You win some, you lose some!\"</p>\n        </div>\n        <div style={{ textAlign: \"center\" }}>\n          <button onClick={handleLogout} className=\"normal-button\">LOG OUT</button>\n        </div>\n      </div>\n    )\n  }\n\n  const setTimedNotification = (message) => {\n    setNotification(message)\n    setTimeout(() => {\n      setNotification('')\n    }, 5000)\n  }\n\n  return (\n    <div className=\"main-content\">\n      <div>\n        <h1>Button the Game</h1>\n      </div>\n      <div>\n        {user === null ? userForm() : gameDisplay()}\n      </div>\n    </div>\n  )\n}\n\nexport default App ","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}