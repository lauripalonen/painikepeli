{"version":3,"sources":["services/login.js","services/user.js","services/button.js","components/UserForm.js","components/GameButton.js","components/GameDisplay.js","App.js","index.js"],"names":["login","credentials","a","axios","post","response","data","signup","getUser","id","get","updateUserPoints","user","put","increment","newButton","getButton","getPushCount","pushCount","UserForm","handleUsernameChange","handlePasswordChange","username","password","handleLogin","handleSignUp","notification","className","htmlFor","type","value","name","onChange","onClick","GameButton","handleButtonPush","GameDisplay","userPoints","rewardCounter","handleLogout","style","textAlign","App","useState","setUser","setUsername","setPassword","setUserPoints","setRewardCounter","setNotification","useEffect","loggedUserJSON","window","localStorage","getItem","JSON","parse","points","updateRewardCounter","event","preventDefault","loginService","startGameRoutine","errorMessage","error","setTimedNotification","userService","setItem","stringify","handleGameButtonPush","buttonService","button","handleUserPoints","loggedUser","updatedUser","updatedPoints","buttonPushCount","confirm","clear","message","setTimeout","handleSubmit","target","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4732d2ba.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async credentials => {\n  const response = await axios.post(baseUrl, credentials)\n  return response.data\n}\n\nexport default { login }","import axios from 'axios'\nconst baseUrl = '/api/users'\n\nconst signup = async credentials => {\n  const response = await axios.post(baseUrl, credentials)\n  return response.data\n}\n\nconst getUser = async (id) => {\n  const response = await axios.get(`${baseUrl}/${id}`)\n  return response.data\n}\n\nconst updateUserPoints = async (id, user) => {\n  const response = await axios.put(`${baseUrl}/${id}`, user)\n  return response.data\n}\n\nexport default { signup, updateUserPoints: updateUserPoints, getUser }","import axios from 'axios'\nconst baseUrl = '/api/button'\n\nconst increment = async (id, newButton) => {\n  const response = await axios.put(`${baseUrl}/${id}`, newButton)\n  return response.data\n}\n\nconst getButton = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\n\nconst getPushCount = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data.pushCount\n}\n\nexport default { increment, getButton, getPushCount }","import React from 'react'\n\nconst UserForm = ({\n  handleUsernameChange,\n  handlePasswordChange,\n  username,\n  password,\n  handleLogin,\n  handleSignUp,\n  notification\n}) => {\n  return (\n    <div className=\"account-block\">\n      <h2>Player account</h2>\n      <form className=\"user-form\">\n        <label htmlFor=\"username\">Username </label>\n        <br />\n        <input\n          className=\"input-field\"\n          type=\"text\"\n          value={username}\n          name=\"Username\"\n          onChange={handleUsernameChange}\n        />\n        <br />\n        <br />\n        <label htmlFor=\"password\">Password </label>\n        <br />\n        <input\n          className=\"input-field\"\n          type=\"password\"\n          value={password}\n          name=\"Password\"\n          onChange={handlePasswordChange}\n        />\n      </form>\n      <div>\n        <button onClick={handleLogin} className=\"normal-button\">LOG IN</button> or <button onClick={handleSignUp} className=\"normal-button\">SIGN UP</button>\n      </div>\n      <div className=\"form-notification-bar\">\n        {notification}\n      </div>\n    </div>\n  )\n}\n\nexport default UserForm","import React from 'react'\n\nconst GameButton = ({ handleButtonPush}) => {\n  return (\n  <div>\n    <button onClick={handleButtonPush} id=\"thebutton\">PUSH</button>\n  </div>\n  )\n}\n\nexport default GameButton","import React from 'react'\nimport GameButton from './GameButton'\n\nconst GameDisplay = ({\n  handleButtonPush,\n  userPoints,\n  rewardCounter,\n  notification,\n  handleLogout\n}) => {\n  return (\n    <div className=\"game-display\">\n      <div className=\"game-content\">\n        <GameButton handleButtonPush={handleButtonPush} />\n      </div>\n      <div className=\"game-data\">\n        Your points: {userPoints} <br />\n        Next reward in: {rewardCounter} pushes\n      </div>\n      <div className=\"game-notification-bar\">\n        {notification}\n      </div>\n      <div className=\"instruction-block\">\n        <h4>Instructions: </h4>\n        <ul>\n          <li>* Push the button and gain rewards</li>\n          <li>* Push cost: 1 point</li>\n          <li>* Lose all points: Game over!</li>\n          <br/>\n          <li>(You can start again with 20 points)</li>\n        </ul>\n        <h4>Rewards: </h4>\n        <ul>\n          <li>* every 10th click: +5 points</li>\n          <li>* every 100th click: +40 points</li>\n          <li>* every 500th click: +250 points</li>\n        </ul>\n        <p className=\"quote\">\"You win some, you lose some!\"</p>\n      </div>\n      <div style={{ textAlign: \"center\" }}>\n        <button onClick={handleLogout} className=\"normal-button\">LOG OUT</button>\n      </div>\n    </div>\n  )\n}\n\nexport default GameDisplay","import React, { useState, useEffect } from 'react'\nimport loginService from './services/login'\nimport userService from './services/user'\nimport buttonService from './services/button'\nimport UserForm from './components/UserForm'\nimport GameDisplay from './components/GameDisplay'\n\nconst App = () => {\n  const [user, setUser] = useState(null)\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [userPoints, setUserPoints] = useState(null)\n  const [rewardCounter, setRewardCounter] = useState('')\n  const [notification, setNotification] = useState('')\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedButtonGameUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n\n      setUser(user)\n      setUserPoints(user.points)\n      setNotification('')\n      updateRewardCounter()\n    }\n  }, [])\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    setNotification('loading...')\n    try {\n      const user = await loginService.login({\n        username, password,\n      })\n\n      startGameRoutine(user)\n\n    } catch (exception) {\n      const errorMessage = exception.response.data.error\n      setTimedNotification(errorMessage)\n    }\n  }\n\n  const handleSignUp = async (event) => {\n    event.preventDefault()\n    setNotification('loading...')\n    try {\n      const user = await userService.signup({\n        username, password,\n      })\n\n      startGameRoutine(user)\n\n    } catch (exception) {\n      const errorMessage = exception.response.data.error\n      setTimedNotification(errorMessage)\n    }\n  }\n\n  const startGameRoutine = (user) => {\n    window.localStorage.setItem(\n      'loggedButtonGameUser', JSON.stringify(user)\n    )\n\n    setUser(user)\n    setUserPoints(user.points)\n\n    updateRewardCounter()\n\n    setUsername('')\n    setPassword('')\n    setNotification('')\n  }\n\n  const handleGameButtonPush = async (event) => {\n    const button = await buttonService.getButton()\n    let pushCount = button.pushCount\n\n    if (userPoints > 0) {\n      pushCount += 1\n    }\n\n    const newButton = {\n      ...button,\n      pushCount: pushCount\n    }\n\n    await buttonService.increment(button.id, newButton)\n    await handleUserPoints()\n    updateRewardCounter()\n  }\n\n  const handleUserPoints = async () => {\n    const loggedUser = JSON.parse(window.localStorage.getItem('loggedButtonGameUser'))\n\n    const updatedUser = {\n      ...loggedUser,\n      points: loggedUser.points < 1 ? 0 : loggedUser.points - 1\n    }\n\n    let updatedPoints = updatedUser.points\n    setUserPoints(updatedPoints)\n\n    const buttonPushCount = await buttonService.getPushCount()\n\n    if (buttonPushCount % 500 === 0) {\n      updatedPoints += 250\n      setTimedNotification('250 points rewarded!')\n    }\n\n    else if (buttonPushCount % 100 === 0) {\n      updatedPoints += 40\n      setTimedNotification('40 points rewarded!')\n    }\n\n    else if (buttonPushCount % 10 === 0) {\n      updatedPoints += 5\n      setTimedNotification('5 points rewarded!')\n    }\n\n    if (updatedPoints < 1) {\n      if (window.confirm(\"No more points. Start again with 20 points?\")) {\n        updatedPoints = 20\n      } else {\n        handleLogout()\n        return\n      }\n    }\n\n    updatedUser.points = updatedPoints\n    setUserPoints(updatedUser.points)\n\n    await userService.updateUserPoints(user.id, updatedUser)\n    window.localStorage.setItem('loggedButtonGameUser', JSON.stringify(updatedUser))\n\n  }\n\n  const handleLogout = () => {\n    setUser(null)\n    localStorage.clear()\n    setTimedNotification(\"Thanks for playing!\")\n  }\n\n  const updateRewardCounter = async () => {\n    const pushCount = await buttonService.getPushCount()\n    setRewardCounter(10 - (pushCount % 10))\n  }\n\n  const setTimedNotification = (message) => {\n    setNotification(message)\n    setTimeout(() => {\n      setNotification('')\n    }, 5000)\n  }\n\n  const userForm = () => {\n    return (\n      <UserForm\n        handleSubmit={handleLogin}\n        handleUsernameChange={({ target }) => setUsername(target.value)}\n        handlePasswordChange={({ target }) => setPassword(target.value)}\n        username={username}\n        password={password}\n        handleLogin={handleLogin}\n        handleSignUp={handleSignUp}\n        notification={notification}\n      />\n    )\n  }\n\n  const gameDisplay = () => {\n    return (\n      <GameDisplay\n        handleButtonPush={handleGameButtonPush}\n        userPoints={userPoints}\n        rewardCounter={rewardCounter}\n        notification={notification}\n        handleLogout={handleLogout}\n      />\n    )\n  }\n\n  return (\n    <div className=\"main-content\">\n      <h1>Button <br />the Game</h1>\n      <div>\n        {user === null ? userForm() : gameDisplay()}\n      </div>\n    </div>\n  )\n}\n\nexport default App ","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}